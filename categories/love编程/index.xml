<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Love编程 on  易道非 Blog</title>
    <link>https://blog.yidaofei.com/categories/love%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in Love编程 on  易道非 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 04 May 2020 00:54:44 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yidaofei.com/categories/love%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript-抽离飞瓜达人视频与商品数据-油猴版本</title>
      <link>https://blog.yidaofei.com/post/20200504-js-lesson-feigua-extra-data/</link>
      <pubDate>Mon, 04 May 2020 00:54:44 +0800</pubDate>
      
      <guid>https://blog.yidaofei.com/post/20200504-js-lesson-feigua-extra-data/</guid>
      <description>&lt;p&gt;本文主要是用于抽离「飞瓜数据」某达人名下的视频数据以及商品数据而设置的工具！&lt;/p&gt;

&lt;p&gt;抽离的数据内容大致如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;视频数据：标题,上传时间,点赞数,评论量,转发数,视频链接&lt;/li&gt;
&lt;li&gt;商品数据：商品名称, 播主点赞增量,视频浏览量,订单数,单价,链接&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>JavaScript-阿里巴巴运费模板定制化需求——第二阶段：油猴插件版</title>
      <link>https://blog.yidaofei.com/post/20191120-js-alibaba-shipping-template-greasespot/</link>
      <pubDate>Wed, 20 Nov 2019 21:13:11 +0800</pubDate>
      
      <guid>https://blog.yidaofei.com/post/20191120-js-alibaba-shipping-template-greasespot/</guid>
      <description>&lt;p&gt;本文是&lt;a href=&#34;https://blog.yidaofei.com/post/20191112-js-alibaba-shipping-template-excel-to-json/&#34;&gt;JavaScript-阿里巴巴运费模板定制化需求——第一阶段：Excel To JSON&lt;/a&gt;的进阶版本——移植到&lt;a href=&#34;https://www.greasespot.net/&#34;&gt;油猴&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;主要修改的地方在于以下方面：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;页面呈现部分：整体界面修改为单个物流渠道导入按钮&lt;/li&gt;
&lt;li&gt;部分代码逻辑修改：修改存储数据点&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本文主要呈现的内容如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;油猴脚本开发简介&lt;/li&gt;
&lt;li&gt;阿里巴巴运费模板油猴版本架构&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScript-阿里巴巴运费模板定制化需求——第一阶段：Excel To JSON</title>
      <link>https://blog.yidaofei.com/post/20191112-js-alibaba-shipping-template-excel-to-json/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.yidaofei.com/post/20191112-js-alibaba-shipping-template-excel-to-json/</guid>
      <description>&lt;p&gt;本文主要是用于记录解决「阿里巴巴国际站运费模板」输入需求，具体情况如下：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;问题：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;燕文运输报价单有179条数据，现在需要一个个的输入&lt;/li&gt;
&lt;li&gt;名下有多家店铺需要同步此模板&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;需求：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;写一个小功能实现Excel数据直接可以创建对应的运费条目&lt;/p&gt;

&lt;p&gt;由于朋友在提交此需求之前就已经定位到能够通过修改特定域的JSON数据达到此目的，所有将解决分解为2个阶段：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;第一阶段：从 EXCEL 生成对应的JSON数据，减少 Excel 一条条建项的重复工作&lt;/li&gt;
&lt;li&gt;第二阶段：利用油猴等手段，可直接在网页导入 Excel 就可以修改对应的数据&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本文即为第一阶段的主要实践过程记录，大致可以分为2部分记录：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;分解页面逻辑&lt;/li&gt;
&lt;li&gt;实现 Excel 到 JSON 的转化&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>JavaScript-修复由导航栏固定导致的页面锚点偏差 Bug</title>
      <link>https://blog.yidaofei.com/post/20181107-js-fix-anchor-of-fixed-nav-header/</link>
      <pubDate>Wed, 07 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.yidaofei.com/post/20181107-js-fix-anchor-of-fixed-nav-header/</guid>
      <description>&lt;p&gt;问题现象：点击侧面 TOC 的链接跳转到锚点内容的下方，在手机浏览器上效果偏移更大&lt;br /&gt;
分析现象：参考相关资料后并对应网站是由于 &lt;strong&gt;头部导航栏采用的绝对布局——固定在顶部&lt;/strong&gt;，页面上滑动的距离需要减去头部导航栏的高度&lt;br /&gt;
解决方法：在页面锚点上前加上一个隐藏的 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标签，采用相对布局固定在锚点上方，并设定相关的 &lt;code&gt;top&lt;/code&gt;数据&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScript-重建 hugo 侧边导航栏 TOC</title>
      <link>https://blog.yidaofei.com/post/20181107-js-rebuild-hugo-sider-toc/</link>
      <pubDate>Sun, 07 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.yidaofei.com/post/20181107-js-rebuild-hugo-sider-toc/</guid>
      <description>&lt;p&gt;本文主要解决以下问题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;控制 hugo TOC 展现层次，如只显示前3层&lt;/li&gt;
&lt;li&gt;美化 hugo TOC 样式&lt;/li&gt;
&lt;li&gt;采用点击弹出层的方式呈现&lt;/li&gt;
&lt;li&gt;页面锚点与导航栏同步&lt;/li&gt;
&lt;li&gt;优化锚点跳转页面滑动效果&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;相关主体代码地址：&lt;a href=&#34;https://gist.github.com/yidaofeicn/1575ee1fb853f5281f535e72b0fa8d91&#34;&gt;https://gist.github.com/yidaofeicn/1575ee1fb853f5281f535e72b0fa8d91&lt;/a&gt;
具体效果点击&lt;strong&gt;右边的锚点按钮&lt;/strong&gt;就可体验
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaWeb-如何解决乱码问题</title>
      <link>https://blog.yidaofei.com/post/20131208-how-to-solve-the-problem-of-garbled-characters/</link>
      <pubDate>Sat, 15 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.yidaofei.com/post/20131208-how-to-solve-the-problem-of-garbled-characters/</guid>
      <description>JavaWeb 编程中乱码大致可以分为以下三种: URL 乱码 JSP、HTML 乱码 Request、Response 乱码 其中 JSP、HTML 乱码可以通过一下方式解决 &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot; /&amp;gt; &amp;lt;%@ page language = &amp;quot;java&amp;quot; contentType = &amp;quot;text/html; charset=UTF-8&amp;quot; pageEncoding = &amp;quot;UTF-8&amp;quot; %&amp;gt; 第1、3中乱码主要是通过程序代码来解决，在 「Servlet」 中通</description>
    </item>
    
    <item>
      <title>POI-如何创建简单的表格</title>
      <link>https://blog.yidaofei.com/post/20141115-poi-create-a-excel/</link>
      <pubDate>Sat, 15 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.yidaofei.com/post/20141115-poi-create-a-excel/</guid>
      <description>&lt;p&gt;本文主要是记录在编程过程中的一个问题：如何创建一个表格，主要涉及的是创建表格的基础问题：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;单元格样式、合并以及数据格式&lt;/li&gt;
&lt;li&gt;选用Workbook以及兼容性问题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL-MySQL与Oracle异同</title>
      <link>https://blog.yidaofei.com/post/20140714-sql-mysql-vs-oracle/</link>
      <pubDate>Mon, 14 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.yidaofei.com/post/20140714-sql-mysql-vs-oracle/</guid>
      <description>组函数用法规则 mysql 中组函数在 select 语句中可以随意使用，但在 oracle 中如果查询语句中有组函数，那其他列名必须是组函数处理过的，或者是 group by 子句中的列否则报错 select name,count(money) from user； 自动增长的数据类型处理 MYSQL 有自动增长的数据类型，插入记录时不用操作此字段，会自动获得数</description>
    </item>
    
    <item>
      <title>SQL-Oracle联合查询</title>
      <link>https://blog.yidaofei.com/post/20140714-sql-oracle-union-query/</link>
      <pubDate>Mon, 14 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.yidaofei.com/post/20140714-sql-oracle-union-query/</guid>
      <description>Oracle 连接查询可以分为内连接、外连接、交叉连接 内连接 内连接可以分为等值连接、非等值连接、自连接等，主要是用于返回满足条件的记录 外连接 外连接可以分为左连接、右连接、全连接等，其为内连接的一种扩展，他不仅会返回满足连接条件的记录，而且还会返回不满足</description>
    </item>
    
  </channel>
</rss>